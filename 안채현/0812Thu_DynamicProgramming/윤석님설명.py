# BPS, DFS, DP 무조건 나온다고 보면 됨
# 너비우선 탐색
# 깊이우선 탐색
# 알고리즘 자체가 코드도 길고 처음보면 복잡해보일 수 있는데 
# 결국은 보다보면 코드가 다 비슷해짐
# 동적 프로그래밍 문제마다 점화식도 다르고
# 1차원배열로 되는 경우가 있는가 하면
# 2차원 배열을 써야할 수도 있고
# 3차원을 써야할 수도 있고

#문제가 말이 동적프로그래밍이지 정말 다양해요
#많이 풀어야 나중에 코테볼 때 수월할 것 같으니 오늘 DP살펴보고
# 앞으로문제풀 때 DP문제는 꼭 한문제이상씩 끼워넣을 생각이심!


#---------------------나동빈//안경잡이개발자/ 네이버블로그 글 참조-------------
풀었던 문제들을 기억시킴. 저장.
피보나치 수열이 대표적 케이스.
피보나치수열 재귀 수업.
재귀로 풀면 매 케이스마다 계산을 해줘야 함.
한 케이스를 계산하는데 그 하위케이스 2개를 계산해서
시간복잡도가 O(2^N)
for문으로 풀면 O(N)밖에 시간을 안씀.
이걸 다이나믹프로그래밍에서 비슷하게..

fibo[0][1][1][2][3][5][8][] // 이 다음숫자를 봐라, 하면 이 전의 숫자들을 보고 결정.

#-----------------------
N=1 ans=1 / 하나인 케이스밖에 없고

N=2 ans=2
N=3 ans  3번째 칸에 세로로 하나를 집어넣고 1-2번째 칸에 N=2일 경우의 가짓수만큼
        세로로 들어가는건 겹치는 케이스니까 제외하고
        가로로 두개를 집어넣고 N=1일 경우의 가짓수만큼 더해준다.
        ans[1]+ans[2]
N=4 ans 

#배낭채우기 문제: https://gsmesie692.tistory.com/113
#안경잡이개발자: https://blog.naver.com/ndb796/221233570962
#-------------------------

배낭문제는 이차원배열을 만들고...

